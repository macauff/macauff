# This workflow will install Python dependencies, then perform static linting analysis.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Run linter

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
   group: ${{ github.workflow }}-${{ github.ref }}
   cancel-in-progress: true

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux, Python 3.11
            os: ubuntu-22.04
            python-version: "3.11"
            toxenv: py311-test
            gfortran-version: 12
            gfortran-compiler: gcc
          - name: macOS, Python 3.10
            os: macOS-15
            python-version: "3.10"
            gfortran-version: 12
            gfortran-compiler: gcc
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up gfortran ${{ matrix.gfortran-compiler}}-${{ matrix.gfortran-version }}
      uses: fortran-lang/setup-fortran@v1
      id: setup-fortran
      with:
        compiler: ${{ matrix.gfortran-compiler }}
        version: ${{ matrix.gfortran-version }}
    - run: |
        ${{ env.FC }} --version
    - name: Install dependencies
      run: |
        # sudo apt-get update
        python -m pip install --upgrade pip
        pip install .[dev]
    - name: Analyze src code with linter
      run: |
        pylint -rn -sn --recursive=y ./src --rcfile=./src/.pylintrc
    - name: Analyze tests code with linter
      if: success() || failure()
      run: |
        pylint -rn -sn --recursive=y ./tests --rcfile=./tests/.pylintrc
    - name: Analyze benchmarks code with linter
      if: success() || failure()
      run: |
        pylint -rn -sn --recursive=y ./benchmarks --rcfile=./tests/.pylintrc